@using SteelCMS.Client.Shared
@using Microsoft.AspNetCore.Components.Web
@using System.IdentityModel.Tokens.Jwt;
@using System.Linq;
@using System.Security.Claims;
@inject AuthService AuthService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage


<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <img src="images/logo.png" alt="Logo" class="logo-icon" />
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">หน้าแรก</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="products">สินค้า</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="portfolio">ตัวอย่างผลงาน</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="about-us">เกี่ยวกับเรา</NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="contact">ติดต่อเรา</NavLink>
                </li>
            </ul>

            <!-- Language -->
            <div class="d-flex">
                <div class="dropdown">
                    <button class="dropdown-toggle" @onclick="ToggleDropdown">
                        🌐 @selectedLanguage.ToUpper()
                    </button>
                    <ul class="dropdown-menu" style="@(isDropdownOpen ? "display: block;" : "display: none;")">
                        <li><a href="#" @onclick="@(() => ChangeLanguage("en"))">English</a></li>
                        <li><a href="#" @onclick="@(() => ChangeLanguage("th"))">ไทย</a></li>
                    </ul>
                </div>

                <!-- Cart -->
                <a class="navbar-brand" href="cart">
                    <img src="images/shopping-cart.png" alt="Shopping-cart" class="icon-size" />
                </a>

                <!-- Notification -->
                <div class="dropdown">
                    <a class="navbar-brand" href="#" @onclick="ToggleNotificationDropdown">
                        <img src="images/notification.png" alt="Notification" class="icon-size" />
                    </a>
                    <ul class="dropdown-menu notification-menu" style="@(isNotificationOpen ? "display: block;" : "display: none;")">
                        @if (notifications.Any())
                        {
                            @foreach (var notification in notifications)
                            {
                                <li><a class="dropdown-item" href="#">@notification</a></li>
                            }
                        }
                        else
                        {
                            <li><a class="dropdown-item text-muted" href="#">ไม่มีการแจ้งเตือน</a></li>
                        }
                    </ul>
                </div>

                <!-- Login -->
                @if (isLoggedIn is true)
                {
                    <div class="dropdown">
                        <button class="btn btn-success dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown">
                            @userName
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li><a class="dropdown-item" href="#" @onclick="Logout">ออกจากระบบ</a></li>
                        </ul>
                    </div>
                    <a class="dropdown-item" href="#" @onclick="Logout">ออกจากระบบ</a>
                }
                else
                {
                    <button @onclick="ShowLoginModal" class="btn btn-success login-button">เข้าสู่ระบบ</button>
                }
                
            </div>
        </div>
    </div>
</nav>

<LoginModal @ref="loginModal" />


@code {

    <!-- Login -->
    private LoginModal? loginModal;
    private bool isLoggedIn;
    private string userName = "";
    private bool isRendered = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserState();  // ✅ โหลดสถานะล็อกอิน
        selectedLanguage = await LocalStorage.GetItemAsync<string>("language") ?? "TH";
    }

    private string GetUserNameFromToken(string token)
    {
        var handler = new JwtSecurityTokenHandler();
        var jwtToken = handler.ReadJwtToken(token);
        var claim = jwtToken.Claims.FirstOrDefault(c => c.Type == "fullname");
        return claim?.Value ?? "ผู้ใช้";
    }

    private async Task LoadUserState()
    {
        var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");

        if (!string.IsNullOrEmpty(token))
        {
            isLoggedIn = true;
            userName = GetUserNameFromToken(token); // ✅ ดึงชื่อจาก Token
        }
        else
        {
            isLoggedIn = false;
            userName = "";
        }
    }

    private async Task ShowLoginModal()
    {
        if (loginModal != null)
        {
            loginModal.Show();
        }
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();  // ✅ เรียกใช้ Logout จาก AuthService
        isLoggedIn = false;
        userName = "";
        Navigation.NavigateTo("/", forceLoad: true);
    }


    <!-- Language -->
    private bool isDropdownOpen = false;
    private string selectedLanguage = "EN";

    private async Task ChangeLanguage(string lang)
    {
        selectedLanguage = lang.ToUpper();
        await LocalStorage.SetItemAsync("language", lang);
        Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
    }

    private void ToggleDropdown()
    {
        isDropdownOpen = !isDropdownOpen;
    }

    <!-- Notification -->
    private bool isNotificationOpen = false;
    private List<string> notifications = new List<string>
    {
        "แจ้งเตือนใหม่ 1",
        "แจ้งเตือนใหม่ 2",
        "อัพเดทล่าสุด!"
    };

    private void ToggleNotificationDropdown()
    {
        isNotificationOpen = !isNotificationOpen;
    }

}




 
<style>
    .nav-container {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        background-color: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        z-index: 100;
    }

    .nav-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        height: 40px;
    }

    .nav-links {
        display: flex;
        gap: 2rem;
    }

    .nav-link {
        text-decoration: none;
        color: black;
        font-weight: 500;
    }

    .nav-actions {
        display: flex;
        gap: 1rem;
        align-items: center;
    }

    .login-button {
        background-color: #6366F1;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
    }

    .icon-size{
        width: 24px;
        height: 24px;
    }

    .logo-icon {
        height: 40px;
    }
    
    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-toggle {
        background: none;
        border: none;
        font-size: 16px;
        cursor: pointer;
        padding: 5px 10px;
    }

    .dropdown-menu {
        position: absolute;
        background: white;
        border: 1px solid #6366F1;
        list-style: none;
        padding: 10px;
        margin: 0;
        display: none;
        min-width: 120px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }

    .dropdown-menu li {
        padding: 5px 10px;
    }

    .dropdown-menu li a {
        text-decoration: none;
        color: black;
        display: block;         
    }

    .dropdown-menu li a:hover {
        background-color: rgba(0,0,0,0.1);
    }

    <!-- Notification -->
    .notification-menu {
        position: absolute;
        right: 0;
        background: white;
        border: 1px solid #6366F1;
        list-style: none;
        padding: 10px;
        margin-top: 10px;
        display: none;
        min-width: 200px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }

        .notification-menu li {
            padding: 5px 10px;
        }

            .notification-menu li a {
                text-decoration: none;
                color: black;
                display: block;
            }

                .notification-menu li a:hover {
                    background-color: rgba(0, 0, 0, 0.1);
                }

</style>