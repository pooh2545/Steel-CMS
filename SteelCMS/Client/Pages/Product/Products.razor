@using SteelCMS.Client.Shared
@using Microsoft.AspNetCore.Components.Web
@inject HttpClient Http
@page "/products"



<div class="container py-4">
    <h1 class="mb-4">สินค้า</h1>

    <div class="row">
        <!-- Filters Sidebar -->
        <div class="col-md-3">
            <div class="filter-section">
                <div class="mb-3">
                    <button class="btn btn-link text-primary p-0 mb-2">ล้างทั้งหมด</button>
                </div>

                <div class="mb-4">
                    <h5 class="mb-3">ราคา</h5>
                    <div class="d-flex gap-2 mb-2">
                        <input type="number" class="form-control" placeholder="200.00" @bind="@minPrice" />
                        <span class="align-self-center">ถึง</span>
                        <input type="number" class="form-control" placeholder="2000.00" @bind="@maxPrice" />
                    </div>
                    <button class="btn btn-primary w-100" @onclick="ApplyPriceFilter">ค้นหา</button>
                </div>

                <div class="mb-4">
                    <h5 class="mb-3">ประเภท</h5>
                    @foreach (var category in categories)
                    {
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="checkbox"
                                   @bind="@category.IsSelected"
                                   id="@category.Id" />
                            <label class="form-check-label" for="@category.Id">
                                @category.Name
                            </label>
                        </div>
                    }
                </div>
            </div>
        </div>
        
        <!-- Products Grid -->
        <div class="col-md-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="search-box">
                    <input type="text" class="form-control" placeholder="ค้นหาสินค้า..."
                           @bind="@searchQuery" @bind:event="oninput" />
                    <button class="search-button">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
                <div class="d-flex align-items-center gap-2">
                    <span>จัดเรียงโดย</span>
                    <select class="form-select" @bind="@sortOrder">
                        <option value="latest">ล่าสุด</option>
                        <option value="price-asc">ราคา ต่ำ-สูง</option>
                        <option value="price-desc">ราคา สูง-ต่ำ</option>
                    </select>
                </div>
            </div>

            <div class="row g-4">
                @foreach (var product in filteredProducts)
                {
                    <div class="col-md-4">
                        <div class="product-card">
                            <img src="@product.ImageUrl" class="product-image" alt="@product.Name" />
                            <div class="product-info">
                                <h3 class="product-title">@product.Name</h3>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="product-price">฿@product.Price.ToString("F2")</span>
                                    <button class="btn btn-primary" @onclick="() => AddToCart(product)">
                                        เพิ่มลงตะกร้าสินค้า
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string searchQuery = "";
    private decimal minPrice = 200.00M;
    private decimal maxPrice = 2000.00M;
    private string sortOrder = "latest";

    private List<Category> categories = new()
    {
        new Category { Id = "1", Name = "เหล็กเส้น", IsSelected = true },
        new Category { Id = "2", Name = "เหล็กแผ่น", IsSelected = false },
        new Category { Id = "3", Name = "เหล็กรูปพรรณ", IsSelected = false },
        new Category { Id = "4", Name = "เหล็กตะแกรง/ตาข่าย", IsSelected = false },
        new Category { Id = "5", Name = "อื่นๆ", IsSelected = false }
    };

    private List<Product> products = new()
    {
        new Product
        {
            Id = "1",
            Name = "เหล็กเส้นกลม SR24 12 มม.",
            Price = 450.00M,
            ImageUrl = "images/steel-rod-12mm.jpg"
        },
        new Product
        {
            Id = "2",
            Name = "เหล็กเส้นกลม SR24 9 มม.",
            Price = 300.00M,
            ImageUrl = "images/steel-rod-9mm.jpg"
        },
        new Product
        {
            Id = "3",
            Name = "เหล็กเส้นกลม SR24 6 มม.",
            Price = 230.00M,
            ImageUrl = "images/steel-rod-6mm.jpg"
        }
    };

    private List<Product> filteredProducts => products
        .Where(p => string.IsNullOrEmpty(searchQuery) ||
                   p.Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase))
        .Where(p => p.Price >= minPrice && p.Price <= maxPrice)
        .OrderBy(p => sortOrder switch
        {
            "price-asc" => p.Price,
            "price-desc" => -p.Price,
            _ => 0
        })
        .ToList();

    private void ApplyPriceFilter()
    {
        // Trigger re-render
        StateHasChanged();
    }

    private void AddToCart(Product product)
    {
        // Implement add to cart logic
    }

    public class Category
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public bool IsSelected { get; set; }
    }

    public class Product
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public decimal Price { get; set; }
        public string ImageUrl { get; set; }
    }
}

<style>
    .filter-section {
        background-color: #fff;
        padding: 1.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

    .search-box {
        position: relative;
        width: 300px;
    }

        .search-box input {
            padding-right: 40px;
        }

    .search-button {
        position: absolute;
        right: 0;
        top: 0;
        bottom: 0;
        width: 40px;
        background: none;
        border: none;
        color: #6366F1;
    }

    .product-card {
        background: white;
        border-radius: 0.5rem;
        overflow: hidden;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        transition: transform 0.2s ease-in-out;
    }

        .product-card:hover {
            transform: translateY(-2px);
        }

    .product-image {
        width: 100%;
        height: 200px;
        object-fit: contain;
        background-color: #f8f9fa;
        padding: 1rem;
    }

    .product-info {
        padding: 1rem;
    }

    .product-title {
        font-size: 1rem;
        margin-bottom: 1rem;
        color: #1a1a1a;
    }

    .product-price {
        font-size: 1.25rem;
        font-weight: 600;
        color: #6366F1;
    }

    .btn-primary {
        background-color: #6366F1;
        border-color: #6366F1;
        font-size: 0.875rem;
        padding: 0.5rem 1rem;
    }

        .btn-primary:hover {
            background-color: #4F46E5;
            border-color: #4F46E5;
        }

    .form-check-input:checked {
        background-color: #6366F1;
        border-color: #6366F1;
    }
</style>