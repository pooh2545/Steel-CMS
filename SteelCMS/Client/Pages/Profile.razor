@page "/profile"
@using System.ComponentModel.DataAnnotations
@inject AuthService AuthService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<div class="profile-container">
    <div class="sidebar">
        <div class="user-brief">
            <img src="images/profile.jpg" alt="Profile picture" class="avatar" />
            <div class="name">Amanda Smith</div>
        </div>
        <nav class="menu">
            <div class="menu-item active">
                <NavLink class="nav-link" href="profile">ข้อมูลส่วนตัว</NavLink>
            </div>
            <div class="menu-item">
                <NavLink class="nav-link" href="order-history">ประวัติคำสั่งซื้อ</NavLink>
            </div>
            <div class="menu-item">
                <NavLink class="nav-link" @onclick="Logout">ออกจากระบบ</NavLink>
            </div>
        </nav>
    </div>

    <div class="main-content">
        <div class="profile-card">
            <div class="card-header">
                <h2>ข้อมูลส่วนตัว</h2>
                <div class="action-buttons">
                    @if (IsEditing)
                    {
                        <button class="btn-cancel" @onclick="CancelEdit">ยกเลิก</button>
                        <button class="btn-save" @onclick="SaveProfile">บันทึก</button>
                    }
                    else
                    {
                        <button class="btn-edit" @onclick="EnableEdit">แก้ไข</button>
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="profile-form">
                    <div class="profile-image-container">
                        <img src="images/profile.jpg" alt="Profile picture" class="profile-image" />
                    </div>
                    <div class="form-fields">
                        <div class="form-group">
                            <label for="fullName">ชื่อ-นามสกุล</label>
                            <input type="text" id="fullName" @bind="UserProfile.FullName" class="form-control" disabled="@(!IsEditing)" />
                        </div>
                        <div class="form-group">
                            <label for="email">อีเมล</label>
                            <input type="email" id="email" @bind="UserProfile.Email" class="form-control" disabled="@(!IsEditing)" />
                        </div>
                        <div class="form-group">
                            <label for="phone">เบอร์โทรศัพท์</label>
                            <input type="text" id="phone" @bind="UserProfile.Phone" class="form-control" disabled="@(!IsEditing)" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserProfileModel UserProfile { get; set; } = new UserProfileModel();
    private UserProfileModel OriginalProfile { get; set; } = new UserProfileModel();
    private bool IsEditing { get; set; } = false;

    protected override void OnInitialized()
    {
        // Initialize with sample data
        UserProfile.FullName = "Amanda Smith";
        UserProfile.Email = "amanda.s@gmail.com";
        UserProfile.Phone = "080xxxxxxx";

        // Copy values to the original profile for potential restore during cancel
        OriginalProfile = CopyProfile(UserProfile);
    }

    private UserProfileModel CopyProfile(UserProfileModel source)
    {
        return new UserProfileModel
            {
                FullName = source.FullName,
                Email = source.Email,
                Phone = source.Phone
            };
    }

    private void EnableEdit()
    {
        IsEditing = true;
        // Save current values in case of cancel
        OriginalProfile = CopyProfile(UserProfile);
    }

    private void CancelEdit()
    {
        IsEditing = false;
        // Restore original values
        UserProfile = CopyProfile(OriginalProfile);
    }

    private void SaveProfile()
    {
        IsEditing = false;
        // Save profile logic would go here
        Console.WriteLine("Profile saved");

        // Update the original values after save
        OriginalProfile = CopyProfile(UserProfile);
    }

    public class UserProfileModel
    {
        [Required]
        public string FullName { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [Phone]
        public string Phone { get; set; }
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/", forceLoad: true);
    }
}

<style>
    /* Main layout */
    :root {
        --primary-color: #5b56e8;
        --secondary-color: #f8f9fa;
        --text-color: #343a40;
        --border-color: #e1e5eb;
        --light-gray: #f5f6fa;
        --white: #ffffff;
        --danger-color: #dc3545;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: var(--text-color);
        background-color: var(--light-gray);
        margin: 0;
        padding: 0;
    }

    .profile-container {
        display: flex;
        max-width: 1200px;
        margin: 20px auto;
        background-color: var(--light-gray);
    }

    /* Sidebar styles */
    .sidebar {
        width: 250px;
        background-color: var(--white);
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .user-brief {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 20px;
        border-bottom: 1px solid var(--border-color);
    }

    .avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 10px;
    }

    .name {
        font-weight: 600;
        font-size: 16px;
    }

    .menu {
        display: flex;
        flex-direction: column;
    }

    .menu-item {
        padding: 12px 15px;
        margin-bottom: 5px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.2s;
        display: flex;
        align-items: center;
    }

        .menu-item span {
            margin-left: 5px;
        }

        .menu-item:hover {
            background-color: rgba(91, 86, 232, 0.1);
            color: var(--primary-color);
        }

        .menu-item.active {
            background-color: rgba(91, 86, 232, 0.1);
            color: var(--primary-color);
            font-weight: 500;
        }

    /* Main content styles */
    .main-content {
        flex: 1;
        padding-left: 20px;
    }

    .profile-card {
        background-color: var(--white);
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        overflow: hidden;
    }

    .card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        border-bottom: 1px solid var(--border-color);
    }

        .card-header h2 {
            margin: 0;
            font-size: 18px;
            font-weight: 600;
        }

    .action-buttons {
        display: flex;
        gap: 10px;
    }

    .btn-edit, .btn-save, .btn-cancel {
        border: none;
        border-radius: 5px;
        padding: 8px 20px;
        cursor: pointer;
        font-weight: 500;
        transition: background-color 0.2s;
    }

    .btn-edit {
        background-color: var(--primary-color);
        color: var(--white);
    }

        .btn-edit:hover {
            background-color: #4a45e0;
        }

    .btn-save {
        background-color: var(--primary-color);
        color: var(--white);
    }

        .btn-save:hover {
            background-color: #4a45e0;
        }

    .btn-cancel {
        background-color: #f8f9fa;
        color: var(--text-color);
        border: 1px solid var(--border-color);
    }

        .btn-cancel:hover {
            background-color: #e9ecef;
        }

    .card-body {
        padding: 20px;
    }

    .profile-form {
        display: flex;
    }

    .profile-image-container {
        width: 150px;
        margin-right: 30px;
    }

    .profile-image {
        width: 100%;
        border-radius: 5px;
        object-fit: cover;
    }

    .form-fields {
        flex: 1;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid var(--border-color);
        border-radius: 5px;
        font-size: 14px;
    }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(91, 86, 232, 0.1);
        }

        .form-control:disabled {
            background-color: var(--secondary-color);
            cursor: not-allowed;
        }

</style>