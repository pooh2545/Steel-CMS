@page "/"
@using Microsoft.AspNetCore.Components.Web
@using System.Timers
@inject HttpClient Http

<PageTitle>หน้าแรก</PageTitle>

<div>
    <!-- Hero Carousel -->
    <div class="slideshow-container">
        <div class="side-preview left-preview">
            @if (Slides.Count > 0)
            {
                <img src="@Slides[CurrentSlideIndex].ImageUrl" alt="Preview" />
            }
        </div>
        <div class="main-slideshow">
            @foreach (var (slide, index) in Slides.Select((s, i) => (s, i)))
            {
                <div class="slide @(index == CurrentSlideIndex ? "active" : "")">
                    <img src="@slide.ImageUrl" alt="@slide.AltText" />
                </div>
            }
            <div class="slide-dots">
                @for (int i = 0; i < Slides.Count; i++)
                {
                    <button class="dot @(i == CurrentSlideIndex ? "active" : "")" @onclick="() => GoToSlide(i)"></button>
                }
            </div>
        </div>
    </div>

    <!-- How to Order Section -->
    <section class="py-5 text-center">
        <h2>วิธีการสั่งซื้อ</h2>
        <iframe width="100%" height="484px" src="@VideoUrl" frameborder="0" allowfullscreen></iframe>
    </section>

    <!-- Products Section -->
    <section class="products-section" id="product-section">
        <h2 class="section-title">สินค้าของเรา</h2>
        <div class="product-categories">
            @foreach (var product in Products)
            {
                <div class="product-category">
                    <a href="@product.Url" class="product-card">
                        <img src="@product.ImageUrl" alt="@product.Name" class="category-image" />
                        <div class="product-name">@product.Name</div>
                    </a>
                </div>
            }
        </div>
    </section>

    <!-- Product Examples -->
    <section class="py-5 text-center">
        <h2>ตัวอย่างสินค้า</h2>
        <div class="slideshow-images-container">
            <button class="slideshow-button" @onclick="PrevProductSlide">&#10094;</button>
            <div class="slideshow-images">
                @for (int i = 0; i < 3; i++) // Show 3 images
                {
                    <img src="@Images[(CurrentIndex + i) % Images.Length]" class="slideshow-image" />
                }
            </div>
            <button class="slideshow-button" @onclick="NextProductSlide">&#10095;</button>
        </div>
    </section>

</div>

@code {

    <!-- Hero Carousel -->
    private Timer? autoPlayTimer;
    private int CurrentSlideIndex { get; set; }
    private List<SlideItem> Slides { get; } = new()
    {
        new SlideItem("/images/construction-workers.jpeg", "Construction workers"),
        new SlideItem("/images/welding.jpeg", "Welding"),
        new SlideItem("/images/steel-pipes.jpeg", "Steel pipes"),
        new SlideItem("/images/steel-show.png", "Construction site")
    };
    
    protected override void OnInitialized()
    {
        if (Slides.Count > 0)
        {
            autoPlayTimer = new System.Timers.Timer(5000);
            autoPlayTimer.AutoReset = true;
            autoPlayTimer.Elapsed += OnTimerElapsed;
            autoPlayTimer.Start();
        }
    }

    private void OnTimerElapsed(object? sender, ElapsedEventArgs e)
    {
        InvokeAsync(() =>
        {
            NextHeroSlide();
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        if (autoPlayTimer != null)
        {
            autoPlayTimer.Elapsed -= OnTimerElapsed;
            autoPlayTimer.Stop();
            autoPlayTimer.Dispose();
            autoPlayTimer = null;
        }
    }

    private void NextHeroSlide() => CurrentSlideIndex = (CurrentSlideIndex + 1) % Slides.Count;
    private void GoToSlide(int index) => CurrentSlideIndex = index;

    <!-- How to Order Section -->
    private string VideoUrl = "https://www.youtube.com/embed/6cJ5QB0a4EA?si=dxJq1Nemn2SuMRKS";
    
    
    <!-- Products Section -->
    private List<ProductItem> Products { get; } = new()
    {
        new("เหล็กเส้น", "/images/steel-bars.png", "/products/steel-bars", false, true),
        new("เหล็กแผ่น", "/images/steel-sheets.png", "/products/steel-sheets"),
        new("เหล็กรูปพรรณ", "/images/steel-profiles.png", "/products/steel-profiles"),
        new("เหล็กตะแกรง/ตาข่าย", "/images/steel-mesh.png", "/products/steel-mesh", true),
        new("อื่นๆ", "/images/other-steel.png", "/products/other")
    };


    <!-- Product Examples -->
    private string[] Images = { "/images/steel-show.png", "/images/steel-mesh.png", "/images/steel-profiles.png", "/images/steel-bars.png" };
    private int CurrentIndex;
    private void NextProductSlide() => CurrentIndex = (CurrentIndex + 3) % Images.Length;
    private void PrevProductSlide() => CurrentIndex = (CurrentIndex - 3 + Images.Length) % Images.Length;
    
    record SlideItem(string ImageUrl, string AltText);
    record ProductItem(string Name, string ImageUrl, string Url, bool IsWide = false, bool IsTall = false);
}

<style>

    /* Hero Carousel */
    .slideshow-container {
        position: relative;
        width: 100%; /* Full width of the viewport */
        height: 60vh; /* 60% of the viewport height */
        margin: auto;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .main-slideshow {
        position: relative;
        width: 100%;
        height: 100%; /* Full height of the container */
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden;
    }

    .slide {
        position: absolute;
        width: 100%;
        height: 100%;
        opacity: 0;
        transition: opacity 0.6s ease-in-out;
    }

        .slide.active {
            opacity: 1;
            position: relative;
        }

        .slide img {
            width: 100%;
            height: 100%;
            object-fit: cover; /* Ensures the image fills the container without distortion */
        }

    .side-preview {
        width: 100px; /* Adjust as needed */
        height: 100px;
        opacity: 0.5;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
    }

    .left-preview {
        left: -120px; /* Move it closer to the center */
    }

    .right-preview {
        right: -120px;
    }

    .side-preview img {
        width: 100%;
        height: auto;
        object-fit: cover;
    }

    .slide-dots {
        text-align: center;
        position: absolute;
        bottom: 15px;
        width: 100%;
    }

    .dot {
        width: 12px;
        height: 12px;
        margin: 5px;
        border-radius: 50%;
        background-color: white;
        border: none;
        display: inline-block;
        cursor: pointer;
    }

        .dot.active {
            background-color: #6366F1;
        }


    <!-- Products Section -->
    .products-section {
        background-color: var(--light-bg);
        padding: 40px 0;
    }

    .product-categories {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 15px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .product-category {
        flex: 1 1 200px;
        max-width: 300px;
    }

    .product-card {
        display: block;
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        height: 200px;
        text-decoration: none;
        transition: transform 0.3s;
    }

        .product-card:hover {
            transform: translateY(-5px);
        }

    .category-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s;
    }

    .product-card:hover .category-image {
        transform: scale(1.05);
    }

    .product-name {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: #6366F1;
        color: white;
        padding: 10px;
        text-align: center;
    }

    <!-- Product Examples -->
    .slideshow-images-container {
        position: relative;
        display: flex;
        justify-content: center; /* Center images horizontally */
        align-items: center; /* Center images vertically */
        gap: 20px; /* Add gap between images */
        padding: 0 20px; /* Add padding around the container */
    }

    .slideshow-image {
        width: 30%; /* Ensures 3 images fit in one row */
        height: 250px; /* Adjust the height to maintain uniformity */
        object-fit: cover; /* Ensures images fill the area while cropping properly */
        border-radius: 10px; /* Soft rounded edges for a better look */
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2); /* Add slight shadow for elegance */
    }

    .slideshow-button {
        font-size: 2em;
        background: #6366F1;
        color: white;
        border: none;
        cursor: pointer;
        padding: 10px;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        z-index: 10;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .slideshow-button:first-of-type {
            left: 10px; /* Position the left button */
        }

        .slideshow-button:last-of-type {
            right: 10px; /* Position the right button */
        }

</style>
