@using SteelAdmin.Client
@inject AuthenticationStateProvider AuthStateProvider

<div class="nav-menu">
    <AuthorizeView>
        <Authorized>
            <div class="nav-item @ActiveCssClass("/")" @onclick="@(() => NavigateToPage("/"))">
                <i class="oi oi-dashboard"></i> หน้าแรก
            </div>
            
            <div class="nav-item @ActiveCssClass("/products")" @onclick="@(() => NavigateToPage("/products"))">
                <i class="oi oi-box"></i> จัดการสินค้า
            </div>
            
            <div class="nav-item @ActiveCssClass("/orders")" @onclick="@(() => NavigateToPage("/orders"))">
                <i class="oi oi-cart"></i> จัดการคำสั่งซื้อ
            </div>
            
            <div class="nav-item @ActiveCssClass("/content")" @onclick="@(() => NavigateToPage("/content"))">
                <i class="oi oi-document"></i> จัดการคอนเทนต์
            </div>
            
            <AuthorizeView Roles="Admin">
                <Authorized Context="adminContext">
                    <div class="nav-item @ActiveCssClass("/users")" @onclick="@(() => NavigateToPage("/users"))">
                        <i class="oi oi-people"></i> จัดการผู้ใช้
                    </div>
                    
                    <div class="nav-item @ActiveCssClass("/reports")" @onclick="@(() => NavigateToPage("/reports"))">
                        <i class="oi oi-graph"></i> รายงาน
                    </div>
                </Authorized>
            </AuthorizeView>
        </Authorized>
    </AuthorizeView>
</div>

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private string GetCurrentUri()
    {
        return NavigationManager.Uri.Replace(NavigationManager.BaseUri, "/");
    }

    private string ActiveCssClass(string href)
    {
        var currentUri = GetCurrentUri();
        return currentUri.StartsWith(href) ? "active" : "";
    }

    private void NavigateToPage(string href)
    {
        NavigationManager.NavigateTo(href);
    }
}